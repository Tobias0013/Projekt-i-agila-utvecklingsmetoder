#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    May 02, 2023 07:17:02 PM CEST  platform: Windows NT

import tkinter as tk
from tkinter import ttk
from datetime import date as get_date
from sql_emotion import sql_emotion as database_con

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40' # X11 color: #666666
_ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black'
_tabfg2 = 'black'
_tabbg1 = 'grey75'
_tabbg2 = 'grey89'
_bgmode = 'light'

class emotion_form:
    def __init__(self, account):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        self.account = account
        self.database = database_con()

        self.emotion_screen = tk.Tk()

        self.emotion_screen.geometry("300x300+925+398")
        self.emotion_screen.minsize(120, 1)
        self.emotion_screen.maxsize(3844, 1061)
        self.emotion_screen.resizable(False, False)
        self.emotion_screen.title("Toplevel 0")
        self.emotion_screen.configure(background="#d9d9d9")

        self.selectedButton = tk.IntVar(self.emotion_screen)
        self.selectedButton.initialize(1)

        self.menubar = tk.Menu(self.emotion_screen, font="TkMenuFont", bg=_bgcolor, fg=_fgcolor)
        self.emotion_screen.configure(menu = self.menubar)

        self.rbtn_1 = tk.Radiobutton(self.emotion_screen)
        self.rbtn_1.place(x=30, y=40, height=26, width=34)
        self.rbtn_1.configure(activebackground="beige")
        self.rbtn_1.configure(activeforeground="black")
        self.rbtn_1.configure(anchor='w')
        self.rbtn_1.configure(background="#d9d9d9")
        self.rbtn_1.configure(compound='left')
        self.rbtn_1.configure(disabledforeground="#a3a3a3")
        self.rbtn_1.configure(foreground="#000000")
        self.rbtn_1.configure(highlightbackground="#d9d9d9")
        self.rbtn_1.configure(highlightcolor="black")
        self.rbtn_1.configure(justify='left')
        self.rbtn_1.configure(selectcolor="#d9d9d9")
        self.rbtn_1.configure(text='''1''')
        self.rbtn_1.configure(value=1)
        self.rbtn_1.configure(variable=self.selectedButton)
        self.rbtn_2 = tk.Radiobutton(self.emotion_screen)
        self.rbtn_2.place(x=70, y=40, height=26, width=34)
        self.rbtn_2.configure(activebackground="beige")
        self.rbtn_2.configure(activeforeground="black")
        self.rbtn_2.configure(anchor='w')
        self.rbtn_2.configure(background="#d9d9d9")
        self.rbtn_2.configure(compound='left')
        self.rbtn_2.configure(disabledforeground="#a3a3a3")
        self.rbtn_2.configure(foreground="#000000")
        self.rbtn_2.configure(highlightbackground="#d9d9d9")
        self.rbtn_2.configure(highlightcolor="black")
        self.rbtn_2.configure(justify='left')
        self.rbtn_2.configure(selectcolor="#d9d9d9")
        self.rbtn_2.configure(text='''2''')
        self.rbtn_2.configure(value=2)
        self.rbtn_2.configure(variable=self.selectedButton)
        self.rbtn_3 = tk.Radiobutton(self.emotion_screen)
        self.rbtn_3.place(x=110, y=40, height=26, width=34)
        self.rbtn_3.configure(activebackground="beige")
        self.rbtn_3.configure(activeforeground="black")
        self.rbtn_3.configure(anchor='w')
        self.rbtn_3.configure(background="#d9d9d9")
        self.rbtn_3.configure(compound='left')
        self.rbtn_3.configure(disabledforeground="#a3a3a3")
        self.rbtn_3.configure(foreground="#000000")
        self.rbtn_3.configure(highlightbackground="#d9d9d9")
        self.rbtn_3.configure(highlightcolor="black")
        self.rbtn_3.configure(justify='left')
        self.rbtn_3.configure(selectcolor="#d9d9d9")
        self.rbtn_3.configure(text='''3''')
        self.rbtn_3.configure(value=3)
        self.rbtn_3.configure(variable=self.selectedButton)
        self.rbtn_4 = tk.Radiobutton(self.emotion_screen)
        self.rbtn_4.place(x=150, y=40, height=26, width=34)
        self.rbtn_4.configure(activebackground="beige")
        self.rbtn_4.configure(activeforeground="black")
        self.rbtn_4.configure(anchor='w')
        self.rbtn_4.configure(background="#d9d9d9")
        self.rbtn_4.configure(compound='left')
        self.rbtn_4.configure(disabledforeground="#a3a3a3")
        self.rbtn_4.configure(foreground="#000000")
        self.rbtn_4.configure(highlightbackground="#d9d9d9")
        self.rbtn_4.configure(highlightcolor="black")
        self.rbtn_4.configure(justify='left')
        self.rbtn_4.configure(selectcolor="#d9d9d9")
        self.rbtn_4.configure(text='''4''')
        self.rbtn_4.configure(value=4)
        self.rbtn_4.configure(variable=self.selectedButton)
        self.rbtn_5 = tk.Radiobutton(self.emotion_screen)
        self.rbtn_5.place(x=190, y=40, height=26, width=34)
        self.rbtn_5.configure(activebackground="beige")
        self.rbtn_5.configure(activeforeground="black")
        self.rbtn_5.configure(anchor='w')
        self.rbtn_5.configure(background="#d9d9d9")
        self.rbtn_5.configure(compound='left')
        self.rbtn_5.configure(disabledforeground="#a3a3a3")
        self.rbtn_5.configure(foreground="#000000")
        self.rbtn_5.configure(highlightbackground="#d9d9d9")
        self.rbtn_5.configure(highlightcolor="black")
        self.rbtn_5.configure(justify='left')
        self.rbtn_5.configure(selectcolor="#d9d9d9")
        self.rbtn_5.configure(text='''5''')
        self.rbtn_5.configure(variable=self.selectedButton)
        self.rbtn_5.configure(value=5)
        self.txt_motivate = tk.Text(self.emotion_screen)
        self.txt_motivate.place(x=30, y=101, height=141, width=222)
        self.txt_motivate.configure(background="white")
        self.txt_motivate.configure(font="TkTextFont")
        self.txt_motivate.configure(foreground="black")
        self.txt_motivate.configure(highlightbackground="#d9d9d9")
        self.txt_motivate.configure(highlightcolor="black")
        self.txt_motivate.configure(insertbackground="black")
        self.txt_motivate.configure(selectbackground="#c4c4c4")
        self.txt_motivate.configure(selectforeground="black")
        self.txt_motivate.configure(wrap="word")
        self.Label1 = tk.Label(self.emotion_screen)
        self.Label1.place(x=30, y=10, height=24, width=167)
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Chose your stress level:''')
        self.Label2 = tk.Label(self.emotion_screen)
        self.Label2.place(x=30, y=70, height=24, width=87)
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Motivate:''')
        self.btn_submit = tk.Button(self.emotion_screen)
        self.btn_submit.place(x=30, y=250, height=24, width=87)
        self.btn_submit.configure(activebackground="beige")
        self.btn_submit.configure(activeforeground="black")
        self.btn_submit.configure(background="#d9d9d9")
        self.btn_submit.configure(compound='left')
        self.btn_submit.configure(disabledforeground="#a3a3a3")
        self.btn_submit.configure(foreground="#000000")
        self.btn_submit.configure(highlightbackground="#d9d9d9")
        self.btn_submit.configure(highlightcolor="black")
        self.btn_submit.configure(pady="0")
        self.btn_submit.configure(text='''Submit''')
        self.btn_close = tk.Button(self.emotion_screen)
        self.btn_close.place(x=170, y=250, height=24, width=87)
        self.btn_close.configure(activebackground="beige")
        self.btn_close.configure(activeforeground="black")
        self.btn_close.configure(background="#d9d9d9")
        self.btn_close.configure(compound='left')
        self.btn_close.configure(disabledforeground="#a3a3a3")
        self.btn_close.configure(foreground="#000000")
        self.btn_close.configure(highlightbackground="#d9d9d9")
        self.btn_close.configure(highlightcolor="black")
        self.btn_close.configure(pady="0")
        self.btn_close.configure(text='''Close''')

        self.btn_close.configure(command=self.on_closing)
        self.btn_submit.configure(command=self.btn_submit_pressed)

        self.emotion_screen.protocol("WM_DELETE_WINDOW", self.on_closing)

        self.emotion_screen.mainloop()

    def btn_submit_pressed(self):
        date = get_date.today()

        rating = self.selectedButton.get()

        text = self.txt_motivate.get("1.0", 'end')

        self.database.insert_emotion(rating, text, date, self.account.get("username"))

        self.on_closing()

    def on_closing(self):
        """Runs when closing login window."""
        # Close database connection
        self.database.close()
        # Close the current window
        self.emotion_screen.destroy()